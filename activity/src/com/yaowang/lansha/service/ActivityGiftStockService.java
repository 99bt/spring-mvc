package com.yaowang.lansha.service;import java.util.Date;import java.util.List;import java.util.Map;import com.yaowang.common.dao.PageDto;import com.yaowang.lansha.entity.ActivityGiftStock;import com.yaowang.lansha.entity.ActivityUser;/** * 活动礼品库存  * @author  *  */public interface ActivityGiftStockService {	/**	 * 新增活动礼品库存	 * @param activityGiftStock	 * @return	 */	public ActivityGiftStock save(ActivityGiftStock entity);		/**	 * 根据ids数组删除活动礼品库存数据	 * @param ids	 * @return	 */	public Integer delete(String[] ids);		/**	 * 更新活动礼品库存	 * @param activityGiftStock	 * @return	 */	public Integer update(ActivityGiftStock entity);		/**	 * 更新抽奖情况	 * @param activityGiftStock	 * @return 中奖情况	 */	public void updateForLottery(ActivityGiftStock entity);		/**	 * 礼物发放审核结果更新	 * @param activityGiftStock	 * @return	 */	public Integer updateForDoGift(ActivityGiftStock entity)throws Exception;		/**	 * 批量更新奖品状态	 * @param activityGiftStock	 * @return	 */	public Integer updateForDoBatchGifts(String[] ids,ActivityGiftStock entity);		/**	 * 根据id获取活动礼品库存	 * @param id	 * @return	 */	public ActivityGiftStock getActivityGiftStockById(String id);		/**	 * 根据ids数组查询活动礼品库存map	 * @param ids	 * @return	 */	public Map<String, ActivityGiftStock> getActivityGiftStockMapByIds(String[] ids);		/**	 * 获取活动首页礼品库存列表	 * @return	 */	public List<ActivityGiftStock> getIndexActivityGiftStockList(ActivityGiftStock entity);	/**	 * 获取活动礼品库存列表	 * @return	 */	public List<ActivityGiftStock> getActivityGiftStockList(ActivityGiftStock entity);		/**	 * 分页获取活动礼品库存列表	 * @param page	 * @return	 */	public List<ActivityGiftStock> getActivityGiftStockPage(ActivityGiftStock entity, PageDto page);	/**	 * 分页获取活动礼品库存列表	 * @param entity	 * @param startTime	 * @param endTime	 * @param page	 * @return	 */	public List<ActivityGiftStock> getActivityGiftStockPage(ActivityGiftStock entity, Date startTime, Date endTime,PageDto page);	public List<ActivityGiftStock> getActivityGiftStockPages(ActivityGiftStock entity, Date startTime, Date endTime,PageDto page);		/**	 * 设置活动	 */	public void setItemName(List<ActivityGiftStock> list);		/**	 * 设置礼物	 */	public void setGiftName(List<ActivityGiftStock> list);		/**	 * 设置用户名	 */	public void setUserName(List<ActivityGiftStock> list);		/**	 * 设置操作人	 */	public void setAdminName(List<ActivityGiftStock> list);	/**	 * 设置活动信息	 */	public void setActivityUser(List<ActivityGiftStock> list);	/**	 * 设置用户信息	 */	public void setUserInfo(List<ActivityGiftStock> list);	/**	 * 获取用户中奖纪录数	 * @return	 */	public Integer getActivityGiftStockNumber(ActivityGiftStock entity ,Date startTime, Date endTime);	/**	 * 更新抽奖活动礼品数量和库存	 * @param activityGift	 * @return	 */	public Integer updateLotteryGiftNumberAndStock(ActivityGiftStock entity);    /**     *     * @param ids     * @param entity     * @return     */    public Integer updateForUserIds(String[] ids,ActivityGiftStock entity);    	/**	 * 更新抽奖活动礼品数量和库存和保存活动用户	 * @param activityGift	 * @return	 */	public Integer updateGiftNumberAndStockAndUser(ActivityGiftStock entity,ActivityUser activityUser);	}