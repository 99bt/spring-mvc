package com.yaowang.lansha.service.impl;import java.util.Date;import java.util.List;import java.util.Map;import javax.annotation.Resource;import org.apache.commons.collections.CollectionUtils;import org.springframework.stereotype.Service;import com.yaowang.common.dao.PageDto;import com.yaowang.lansha.dao.ActivityGiftDao;import com.yaowang.lansha.entity.ActivityGift;import com.yaowang.lansha.entity.ActivityGiftStock;import com.yaowang.lansha.entity.ActivityItem;import com.yaowang.lansha.service.ActivityGiftService;/** * 活动礼品  * @author  *  */@Service("activityGiftService")public class ActivityGiftServiceImpl implements ActivityGiftService{	@Resource	private ActivityGiftDao activityGiftDao;		@Override	public ActivityGift save(ActivityGift entity){		return activityGiftDao.save(entity);	}		@Override	public Integer delete(String[] ids){		return activityGiftDao.delete(ids);	}		@Override	public Integer update(ActivityGift entity){		return activityGiftDao.update(entity);	}		@Override	public Integer updateGiftNumberAndStock(ActivityGiftStock entity){		return activityGiftDao.updateGiftNumberAndStock(entity);	}		@Override	public ActivityGift getActivityGiftById(String id){		return activityGiftDao.getActivityGiftById(id);	}		@Override	public Map<String, ActivityGift> getActivityGiftMapByIds(String[] ids){		return activityGiftDao.getActivityGiftMapByIds(ids);	}		@Override	public List<ActivityGift> getActivityGiftList(ActivityGift entity){		return activityGiftDao.getActivityGiftList(entity);	}	@Override	public List<ActivityGift> getLotteryActivityGiftList(ActivityGift entity){		return activityGiftDao.getLotteryActivityGiftList(entity);	}		@Override	public List<ActivityGift> getActivityGiftList(){		return activityGiftDao.getActivityGiftList();	}		@Override	public List<ActivityGift> getActivityGiftList(ActivityGift entity,Date startTime, Date endTime){		return activityGiftDao.getActivityGiftList(entity,startTime,endTime);	}		@Override	public List<ActivityGift> getActivityGiftPage(ActivityGift entity, PageDto page){		return activityGiftDao.getActivityGiftPage(entity, page);	}	@Override	public void setName(List<ActivityGift> list, ActivityItem activityItem) {		if(CollectionUtils.isNotEmpty(list)){			for (ActivityGift activityGift : list) {				activityGift.setItemName(activityItem.getName());			}		}	}	@Override	public void updateStatusById(String id, String status) {		activityGiftDao.updateStatusById(id, status);	}	@Override	public ActivityGift getActivityGiftByName(String name) {		return activityGiftDao.getActivityGiftByName(name);	}}