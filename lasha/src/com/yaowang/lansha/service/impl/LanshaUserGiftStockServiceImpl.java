package com.yaowang.lansha.service.impl;import java.util.List;import java.util.Map;import javax.annotation.Resource;import org.apache.commons.collections.CollectionUtils;import org.apache.commons.lang.StringUtils;import org.springframework.stereotype.Service;import com.yaowang.common.dao.PageDto;import com.yaowang.lansha.dao.LanshaUserGiftStockDao;import com.yaowang.lansha.entity.LanshaUserGiftStock;import com.yaowang.lansha.service.LanshaUserGiftStockService;/** * 礼物记录  * @author  *  */@Service("lanshaUserGiftStockService")public class LanshaUserGiftStockServiceImpl implements LanshaUserGiftStockService{		@Resource	private LanshaUserGiftStockDao lanshaUserGiftStockDao;		@Override	public LanshaUserGiftStock save(LanshaUserGiftStock entity){		return lanshaUserGiftStockDao.save(entity);	}		@Override	public Integer updateLottery(LanshaUserGiftStock entity){		return lanshaUserGiftStockDao.updateLottery(entity);	}		@Override	public Integer delete(String[] ids){		return lanshaUserGiftStockDao.delete(ids);	}		@Override	public Integer update(LanshaUserGiftStock entity){		return lanshaUserGiftStockDao.update(entity);	}		@Override	public LanshaUserGiftStock getLanshaUserGiftStockById(String id){		return lanshaUserGiftStockDao.getLanshaUserGiftStockById(id);	}		@Override	public Map<String, LanshaUserGiftStock> getLanshaUserGiftStockMapByIds(String[] ids){		return lanshaUserGiftStockDao.getLanshaUserGiftStockMapByIds(ids);	}		@Override	public List<LanshaUserGiftStock> getLanshaUserGiftStockList(LanshaUserGiftStock entity){		return lanshaUserGiftStockDao.getLanshaUserGiftStockList(entity);	}		@Override	public List<LanshaUserGiftStock> getLanshaUserGiftStockPage(LanshaUserGiftStock entity, PageDto page){		return lanshaUserGiftStockDao.getLanshaUserGiftStockPage(entity, page);	}	@Override	public Integer updateReduceStock(String id, Integer stock) {		int count = lanshaUserGiftStockDao.updateReduceStock(id, stock);		if(count < 1){			throw new RuntimeException("礼物数量不足");		}		return count;	}	@Override	public Map<String, Integer> getStockMapByUserIds(String[] userIds) {		return lanshaUserGiftStockDao.getStockMapByUserIds(userIds);	}	@Override	public LanshaUserGiftStock getByGiftIdAndUserId(String giftId, String userId) {		if(StringUtils.isBlank(giftId) || StringUtils.isBlank(userId)){			return null;		}        LanshaUserGiftStock searchStock = new LanshaUserGiftStock();		searchStock.setGiftId(giftId);		searchStock.setUserId(userId);		List<LanshaUserGiftStock> list = lanshaUserGiftStockDao.getLanshaUserGiftStockPage(searchStock, null);		if(CollectionUtils.isNotEmpty(list)){			return list.get(0);		}else{			return null;		}	}	@Override	public Integer updateGiftStock(String giftId, Integer stock) {		if(StringUtils.isBlank(giftId) || null == stock){			return 0;		}		LanshaUserGiftStock lanshaGift = new LanshaUserGiftStock();		lanshaGift.setGiftId(giftId);		lanshaGift.setStock(stock);		return lanshaUserGiftStockDao.updateStockByGiftId(lanshaGift) ;	}}