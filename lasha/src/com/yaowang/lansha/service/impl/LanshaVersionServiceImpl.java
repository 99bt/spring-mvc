package com.yaowang.lansha.service.impl;import java.util.Date;import java.util.List;import java.util.Map;import javax.annotation.Resource;import org.springframework.stereotype.Service;import com.yaowang.common.dao.PageDto;import com.yaowang.lansha.dao.LanshaVersionDao;import com.yaowang.lansha.entity.LanshaVersion;import com.yaowang.lansha.service.LanshaVersionService;import com.yaowang.util.cache.DefaultCacheManager;/** * app版本表  * @author  *  */@Service("lanshaVersionService")public class LanshaVersionServiceImpl extends DefaultCacheManager implements LanshaVersionService{	@Resource	private LanshaVersionDao lanshaVersionDao;		@Override	public LanshaVersion save(LanshaVersion entity){		return lanshaVersionDao.save(entity);	}		@Override	public Integer delete(String[] ids){		return lanshaVersionDao.delete(ids);	}		@Override	public Integer update(LanshaVersion entity){		return lanshaVersionDao.update(entity);	}		@Override	public LanshaVersion getVersionById(String id){		return lanshaVersionDao.getVersionById(id);	}		@Override	public Map<Integer, LanshaVersion> getVersionMapByIds(Integer[] ids){		return lanshaVersionDao.getVersionMapByIds(ids);	}		@Override	public List<LanshaVersion> getVersionList(LanshaVersion entity){		return lanshaVersionDao.getVersionList(entity);	}		@Override	public List<LanshaVersion> getVersionPage(LanshaVersion entity,  Integer[] status, PageDto page, Date startTime, Date endTime){		return lanshaVersionDao.getVersionPage( entity,  status,  page,  startTime,  endTime);	}	@Override	public LanshaVersion getLastYwVersionList(String osType, String appType) {		PageDto page = new PageDto();		page.setRowNum(1);		page.setCount(false);		LanshaVersion version = new LanshaVersion();		version.setStatus("1");		version.setOsType(osType);		version.setAppType(appType);		List<LanshaVersion> list = getVersionPage(version, null, page, null, null);		if (list.isEmpty()) {			return null;		}else {			return list.get(0);		}	}	@Override	public void updateStatus(String[] ids, String status) {		lanshaVersionDao.updateStatus(ids, status);	}	}