package com.yaowang.lansha.service.impl;import java.util.ArrayList;import java.util.List;import java.util.Map;import javax.annotation.Resource;import org.springframework.stereotype.Service;import com.yaowang.common.dao.PageDto;import com.yaowang.lansha.common.constant.LanshaConstant;import com.yaowang.lansha.dao.LanshaGiftUserDao;import com.yaowang.lansha.entity.LanshaGiftUser;import com.yaowang.lansha.entity.LanshaUserGiftStock;import com.yaowang.lansha.entity.LanshaUserRecord;import com.yaowang.lansha.service.LanshaGiftUserService;import com.yaowang.lansha.service.LanshaUserGiftStockService;import com.yaowang.lansha.service.LanshaUserRecordService;import com.yaowang.lansha.service.YwUserService;/** * 礼物记录  * @author  *  */@Service("lanshaGiftUserService")public class LanshaGiftUserServiceImpl implements LanshaGiftUserService{	@Resource	private LanshaGiftUserDao lanshaGiftUserDao;	@Resource	private LanshaUserGiftStockService lanshaUserGiftStockService;	@Resource	private YwUserService ywUserService;	@Resource	private LanshaUserRecordService lanshaUserRecordService;		@Override	public LanshaGiftUser save(LanshaGiftUser entity){		return lanshaGiftUserDao.save(entity);	}		@Override	public Integer delete(String[] ids){		return lanshaGiftUserDao.delete(ids);	}		@Override	public Integer update(LanshaGiftUser entity){		return lanshaGiftUserDao.update(entity);	}		@Override	public LanshaGiftUser getLanshaGiftUserById(String id){		return lanshaGiftUserDao.getLanshaGiftUserById(id);	}		@Override	public Map<String, LanshaGiftUser> getLanshaGiftUserMapByIds(String[] ids){		return lanshaGiftUserDao.getLanshaGiftUserMapByIds(ids);	}		@Override	public List<LanshaGiftUser> getLanshaGiftUserList(LanshaGiftUser entity){		return lanshaGiftUserDao.getLanshaGiftUserList(entity);	}		@Override	public List<LanshaGiftUser> getLanshaGiftUserPage(LanshaGiftUser entity, PageDto page){		return lanshaGiftUserDao.getLanshaGiftUserPage(entity, page);	}	@Override	public void saveGiveGift(LanshaGiftUser entity, String giftStockId) {		List<LanshaUserRecord> recordList = new ArrayList<LanshaUserRecord>();		//送礼人		LanshaUserRecord record1 = new LanshaUserRecord();		record1.setObjectType(LanshaConstant.RECORD_OBJECT_TYPE_2);		record1.setObjectId(entity.getGiftId());		record1.setRemark("送主播");		record1.setType(LanshaConstant.EXPEND);		record1.setUserId(entity.getUserId());		record1.setCreateTime(entity.getCreateTime());		record1.setStock(entity.getNumber());		recordList.add(record1);				//如果礼物需要消耗蓝鲨币,更新用户蓝鲨币		if(entity.getBi() != null && entity.getBi() > 0){			ywUserService.updateReduceBi(entity.getUserId(), entity.getBi());						LanshaUserRecord record2 = new LanshaUserRecord();			record2.setObjectType(LanshaConstant.RECORD_OBJECT_TYPE_1);			record2.setRemark("送主播");			record2.setType(LanshaConstant.EXPEND);			record2.setUserId(entity.getUserId());			record2.setCreateTime(entity.getCreateTime());			record2.setStock(entity.getBi());			recordList.add(record2);		}		//收礼人		//更新主播礼物库存		LanshaUserGiftStock gift = lanshaUserGiftStockService.getByGiftIdAndUserId(entity.getGiftId(), entity.getAnchorId());		if(gift == null){			//第一次领取添加库存记录			gift = new LanshaUserGiftStock();			gift.setCreateTime(entity.getCreateTime());			gift.setGiftId(entity.getGiftId());			gift.setStock(entity.getNumber());			gift.setUserId(entity.getAnchorId());			lanshaUserGiftStockService.save(gift);		}else{			gift.setStock(gift.getStock() + entity.getNumber());			lanshaUserGiftStockService.update(gift);		}		//新增送礼记录		lanshaGiftUserDao.save(entity);				LanshaUserRecord record3 = new LanshaUserRecord();		record3.setObjectType(LanshaConstant.RECORD_OBJECT_TYPE_2);		record3.setObjectId(entity.getGiftId());		record3.setRemark("用户赠送");		record3.setType(LanshaConstant.INCOME);		record3.setUserId(entity.getAnchorId());		record3.setCreateTime(entity.getCreateTime());		record3.setStock(entity.getNumber());		recordList.add(record3);		//保存收入支出记录		lanshaUserRecordService.saveBatch(recordList);	}	}