package com.yaowang.lansha.service.impl;import java.util.*;import javax.annotation.Resource;import com.yaowang.common.dao.PageDto;import com.yaowang.lansha.common.constant.LanshaConstant;import com.yaowang.lansha.dao.YwUserRoomContractDao;import com.yaowang.lansha.entity.YwGame;import com.yaowang.lansha.entity.YwUser;import com.yaowang.lansha.entity.YwUserRoom;import com.yaowang.lansha.entity.YwUserRoomContract;import com.yaowang.lansha.service.YwGameService;import com.yaowang.lansha.service.YwUserRoomContractService;import com.yaowang.lansha.service.YwUserRoomService;import com.yaowang.lansha.service.YwUserService;import org.apache.commons.collections.CollectionUtils;import org.springframework.stereotype.Service;/** * 签约主播管理 * * @author */@Service("ywUserRoomContractService")public class YwUserRoomContractServiceImpl implements YwUserRoomContractService {    @Resource    private YwUserRoomContractDao ywUserRoomContractDao;    @Resource    private YwUserService ywUserService;    @Resource    private YwUserRoomService ywUserRoomService;    @Resource    private YwGameService ywGameService;    @Override    public YwUserRoomContract save(YwUserRoomContract entity) {        return ywUserRoomContractDao.save(entity);    }    @Override    public Integer delete(String[] userIds) {        return ywUserRoomContractDao.delete(userIds);    }    @Override    public Integer update(YwUserRoomContract entity) {        return ywUserRoomContractDao.update(entity);    }    @Override    public YwUserRoomContract getYwUserRoomContractById(String userId) {        return ywUserRoomContractDao.getYwUserRoomContractById(userId);    }    @Override    public Map<String, YwUserRoomContract> getYwUserRoomContractMapByIds(String[] userIds) {        return ywUserRoomContractDao.getYwUserRoomContractMapByIds(userIds);    }    @Override    public List<YwUserRoomContract> getYwUserRoomContractList(YwUserRoomContract entity) {        return ywUserRoomContractDao.getYwUserRoomContractList(entity);    }    @Override    public List<YwUserRoomContract> getYwUserRoomContractPage(YwUserRoomContract entity, PageDto page) {        return ywUserRoomContractDao.getYwUserRoomContractPage(entity, page);    }    @Override    public void setUserName(List<YwUserRoomContract> list) {        if (CollectionUtils.isNotEmpty(list)) {            Set<String> ids = new HashSet<String>();            for (YwUserRoomContract room : list) {                ids.add(room.getUserId());            }            Map<String, YwUser> map = ywUserService.getYwUserMapByIds(ids.toArray(new String[]{}));            for (YwUserRoomContract room : list) {                if (map.containsKey(room.getUserId())) {                    YwUser users = map.get(room.getUserId());                    room.setUserName(users.getNickname());                    room.setMobile(users.getMobile());                }            }        }    }    @Override    public void setGameName(List<YwUserRoomContract> list) {        if (CollectionUtils.isNotEmpty(list)) {            Set<String> ids = new HashSet<String>();            for (YwUserRoomContract room : list) {                ids.add(room.getRoomId());            }            Map<String, YwUserRoom> roomMap = ywUserRoomService.getYwUserRoomMapByIdInts(ids.toArray(new String[]{}), null);            // Set<String> keySet = roomMap.keySet();            if (CollectionUtils.isNotEmpty(list)) {                Set<String> gameIds = new HashSet<String>();                for (Map.Entry<String, YwUserRoom> entry : roomMap.entrySet()) {                    gameIds.add(entry.getValue().getGameId());                }                Map<String, YwGame> map = ywGameService.getYwGameMapByIds(gameIds.toArray(new String[]{}));                for (YwUserRoomContract room : list) {                    if (roomMap.containsKey(room.getRoomId())) {                        if (map.containsKey(roomMap.get(room.getRoomId()).getGameId())) {                            room.setGameName(map.get(roomMap.get(room.getRoomId()).getGameId()).getName());                        }                    }                }            }        }    }    @Override    public void del(String[] ids) {        ywUserRoomContractDao.updateStatus(ids);        ywUserRoomService.updateSignByIDInts(0,ids); //主播房间设置未签约    }    @Override    public YwUserRoomContract saveOrUpdate(YwUserRoomContract entity) {        YwUserRoomContract roomContract = ywUserRoomContractDao.getYwUserRoomContractById(entity.getUserId());        if (roomContract == null) {            entity.setStatus(LanshaConstant.STATUS_VAILD);            entity.setCreateTime(new Date());            ywUserRoomContractDao.save(entity);        } else {            entity.setUpdateTime(new Date());            entity.setStatus(LanshaConstant.STATUS_VAILD);            ywUserRoomContractDao.update(entity);        }        ywUserRoomService.updateSignByIDInts(1,new String[]{entity.getRoomId()});//更新主播房间签约状态（签约）        return entity;    }}