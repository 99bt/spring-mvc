package com.yaowang.lansha.service.impl;import java.util.Date;import java.util.HashSet;import java.util.List;import java.util.Map;import java.util.Set;import javax.annotation.Resource;import org.apache.commons.collections.CollectionUtils;import org.apache.commons.lang.StringUtils;import org.springframework.stereotype.Service;import com.yaowang.common.dao.PageDto;import com.yaowang.lansha.dao.LanshaSuggestionDao;import com.yaowang.lansha.entity.LanshaSuggestion;import com.yaowang.lansha.entity.YwUser;import com.yaowang.lansha.service.LanshaSuggestionService;import com.yaowang.lansha.service.YwUserService;import com.yaowang.service.SysMcodeDetailService;/** * 意见反馈 *  * @author *  */@Service("lanshaSuggestionService")public class LanshaSuggestionServiceImpl implements LanshaSuggestionService {	@Resource	private LanshaSuggestionDao lanshaSuggestionDao;	@Resource	private YwUserService ywUserService;	@Resource	private SysMcodeDetailService sysMcodeDetailService;	@Override	public LanshaSuggestion save(LanshaSuggestion entity) {		return lanshaSuggestionDao.save(entity);	}	@Override	public Integer delete(String[] ids) {		return lanshaSuggestionDao.delete(ids);	}	@Override	public Integer update(LanshaSuggestion entity) {		return lanshaSuggestionDao.update(entity);	}	@Override	public LanshaSuggestion getMgameSuggestionById(String id) {		return lanshaSuggestionDao.getMgameSuggestionById(id);	}	@Override	public Map<String, LanshaSuggestion> getMgameSuggestionMapByIds(String[] ids) {		return lanshaSuggestionDao.getMgameSuggestionMapByIds(ids);	}	@Override	public List<LanshaSuggestion> getMgameSuggestionList(LanshaSuggestion entity) {		return lanshaSuggestionDao.getMgameSuggestionList(entity);	}	@Override	public List<LanshaSuggestion> getMgameSuggestionPage(LanshaSuggestion entity, String name, PageDto page, Date startTime, Date endTime) {		return lanshaSuggestionDao.getMgameSuggestionPage(entity, name, page, startTime, endTime);	}	@Override	public void setSuggestionName(List<LanshaSuggestion> list) {		if (CollectionUtils.isNotEmpty(list)) {			Set<String> userIds = new HashSet<String>();			for (LanshaSuggestion suggestion : list) {				if (StringUtils.isNotBlank(suggestion.getUserId())) {					userIds.add(suggestion.getUserId());				}			}			Map<String, String> mapMcode = sysMcodeDetailService.getMcodeThisIdToContent("LANSHA_SUGGESTION");			Map<String, YwUser> mapUser = ywUserService.getYwUserMapByIds(userIds.toArray(new String[] {}));			for (LanshaSuggestion suggestion : list) {				// 反馈人				String userId = suggestion.getUserId();				if (mapUser.containsKey(userId)) {					suggestion.setUserName(mapUser.get(userId).getUsername());				} else {					suggestion.setUserName("匿名用户");				}				// 意见类型				if(mapMcode.containsKey(suggestion.getType())){					suggestion.setType(mapMcode.get(suggestion.getType()));				}			}		}	}}