package com.yaowang.lansha.service.impl;import java.util.ArrayList;import java.util.HashSet;import java.util.List;import java.util.Map;import java.util.Set;import javax.annotation.Resource;import org.apache.commons.lang.StringUtils;import org.springframework.stereotype.Service;import com.yaowang.common.dao.PageDto;import com.yaowang.lansha.common.constant.LanshaConstant;import com.yaowang.lansha.dao.YwBannerDao;import com.yaowang.lansha.dao.YwUserRoomDao;import com.yaowang.lansha.entity.YwBanner;import com.yaowang.lansha.entity.YwUserRoom;import com.yaowang.lansha.service.YwBannerService;import com.yaowang.util.cache.DefaultCacheManager;import com.yaowang.util.cache.advice.CacheAnnotation;import com.yaowang.util.cache.advice.CacheClearAnnotation;/** * 广告  * @author  *  */@Service("ywBannerService")public class YwBannerServiceImpl extends DefaultCacheManager implements YwBannerService{	@Resource	private YwBannerDao ywBannerDao;	@Resource	private YwUserRoomDao ywUserRoomDao;		@Override	@CacheClearAnnotation	public YwBanner save(YwBanner entity){		return ywBannerDao.save(entity);	}		@Override	@CacheClearAnnotation	public Integer delete(String[] ids){		return ywBannerDao.delete(ids);	}		@Override	@CacheClearAnnotation	public Integer update(YwBanner entity){		return ywBannerDao.update(entity);	}		@Override	public YwBanner getYwBannerById(String id){		return ywBannerDao.getYwBannerById(id);	}		@Override	public Map<String, YwBanner> getYwBannerMapByIds(String[] ids){		return ywBannerDao.getYwBannerMapByIds(ids);	}		@Override	public List<YwBanner> getYwBannerList(YwBanner entity){		return ywBannerDao.getYwBannerList(entity);	}		@Override	@CacheAnnotation	public List<YwBanner> getYwBannerPage(YwBanner entity, PageDto page){		return ywBannerDao.getYwBannerPage(entity, page);	}		@Override	public void setRoom(List<YwBanner> banners, boolean b) {		if (banners == null) {			return;		}		Set<String> roomIds = new HashSet<String>();		for (YwBanner banner : banners) {			if (StringUtils.isNotBlank(banner.getRoomId())) {				roomIds.add(banner.getRoomId());			}		}		Map<String, YwUserRoom> mapRoom = ywUserRoomDao.getYwUserRoomMapByIdInts(roomIds.toArray(new String[]{}), null);		List<YwBanner> data = new ArrayList<YwBanner>();		for (YwBanner banner : banners) {			YwUserRoom room = mapRoom.get(banner.getRoomId());			banner.setRoom(room);			//是否过滤不在线房间的广告			if(b){				if (banner.getType().equals("0") && (room == null || room.getOnline() != LanshaConstant.ROOM_STATUS_ONLINE)) {					data.add(banner);				}			}		}		banners.removeAll(data);	}	@Override	public List<YwBanner> getYwBannerListByIds(String[] ids) {		return ywBannerDao.getYwBannerListByIds(ids);	}	}