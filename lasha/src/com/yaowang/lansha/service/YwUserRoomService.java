package com.yaowang.lansha.service;import java.util.Date;import java.util.List;import java.util.Map;import com.yaowang.common.dao.PageDto;import com.yaowang.lansha.entity.LanshaLiveHistory;import com.yaowang.lansha.entity.YwBanner;import com.yaowang.lansha.entity.YwUserRoom;/** * yw_user_room * * @author */public interface YwUserRoomService {    /**     * 新增yw_user_room     *     * @param ywUserRoom     * @return     */    public YwUserRoom save(YwUserRoom entity);    /**     * 根据ids数组删除yw_user_room数据     *     * @param ids     * @return     */    public Integer delete(String[] ids);    /**     * 更新yw_user_room     *     * @param ywUserRoom     * @return     */    public Integer update(YwUserRoom entity);    /**     * 更新房间状态     *     * @param room     * @param liveHistory TODO     * @return     */    public int updateState(YwUserRoom room, LanshaLiveHistory liveHistory);    /**     * 更新直播码     *     * @param id roomId     * @return     */    public int updateRoomId(String id, String roomId);    /**     * 根据id获取yw_user_room     *     * @param id     * @return     */    public YwUserRoom getYwUserRoomById(String id);    /**     * 根据idInt获取yw_user_room     *     * @param idInt     * @return     */    public YwUserRoom getYwUserRoomById(int idInt);    /**     * 用户id     *     * @param uid     * @return     */    public YwUserRoom getYwUserRoomByUid(String uid);    /**     * 根据房间号获取房间信息     *     * @param id     * @return     */    public YwUserRoom getYwUserRoomByRoomId(String roomId);    /**     * 根据ids数组查询yw_user_roommap     *     * @param ids     * @return     */    public Map<String, YwUserRoom> getYwUserRoomMapByIds(String[] ids);    /**     * 根据ids数组查询yw_user_roommap     *     * @param userIds     * @return     */    public Map<String, YwUserRoom> getYwUserRoomMapByUserIds(String[] userIds);    /**     * 根据ids数组查询yw_user_roommap     *     * @param status TODO     * @param ids     * @return     */    public Map<String, YwUserRoom> getYwUserRoomMapByIdInts(String[] idInts, Integer status);    /**     * 获取yw_user_room列表     *     * @return     */    public List<YwUserRoom> getYwUserRoomList(YwUserRoom room);    /**     * 分页获取yw_user_room列表     *     * @param room     * @param uids   女神ids     * @param page     * @param isBan  是否播放     * @param isShow 是否展示     * @return     */    public List<YwUserRoom> getYwUserRoomList(YwUserRoom room, String[] uids, PageDto page, Boolean isBan, Boolean isShow);    /**     * 修改直播状态     *     * @param ids     * @param status     * @param remarks 备注     */    public void updateBySql(String[] ids, Integer status, String remarks);    /**     * 根据uids数组查询yw_user_roommap     *     * @param uids     * @return     */    public Map<Integer, YwUserRoom> getYwUserRoomMapByUIds(String[] uids);    /**     * 排序     *     * @param list     * @return     */    public int updateOrderId(List<YwUserRoom> list);    /**     * 根据房间id更新     *     * @param room     * @return     */    public Integer updateByRoomId(YwUserRoom room);    /**     * 更新房间图片     *     * @param temp     * @return     */    public Integer updateLiveImgByRoomId(YwUserRoom temp);    /**     * 重置状态     *     * @return     */    public Integer updateReset(Date date);    /**     * 设置女神名称（取用户昵称）     *     * @param list     */    public void setUserName(List<YwUserRoom> list);    /**     * 设置主播游戏名称     *     * @param list     */    public void setGameName(List<YwUserRoom> list);    /**     * @param name     * @param listInStatus     * @return     * @Description: 根据房间名称获取房间信息     */    public List<Map<String, Object>> getListMapRoomInfo(String name, List<Integer> listInStatus);    /**     * @param object     * @param array     * @return     * @Description: 获取房间信息     */    public List<YwUserRoom> listYwUserRoomList(YwUserRoom entity, String[] ids);    /**     * @param list     * @Description: 设置是否是热门房间     */    public void setIsHotRoom(List<YwUserRoom> list);    /**     * 根据条件获取全部直播房间     *     * @param ids TODO     * @return     */    public List<YwUserRoom> getAllLiveListByRoome(YwUserRoom entity, PageDto page, String[] ids);    /**     * 设置直播大厅数据     *     * @param list     * @creationDate. 2015-12-10 上午11:43:32     */    public void setData(List<YwUserRoom> list, boolean flag);    /**     * @param array     * @return     * @Description:     */    public List<YwUserRoom> getYwUserRoomByIds(String[] ids, PageDto page);    /**     * 获得房间总数     *     * @return     * @creationDate. 2015-12-14 下午12:24:56     */    public Integer getRoomCount();    /**     * @param entity     * @param page     * @return     * @Description: 获取热门房间信息     */    public List<YwUserRoom> getYwUserRoomIsHot(YwUserRoom entity, PageDto page);    /**     * @param listMapData     * @Description: 设置名称     */    public void setName(List<Map<String, Object>> listMapData);    /**     * @param ywBanner     * @param online     * @param page     * @return     * @Description: app首页调用     */    public List<Map<String, Object>> getBannerUserRoom(YwBanner ywBanner, Integer online, PageDto page);    /**     * 通过主播昵称查找房间     *     * @param name     * @return     */    public List<YwUserRoom> getYwUserRoomByNickName(String name);    public List<Map<String, Object>> getByRoomIdint(Integer id);    public Integer updateSignByIDInts(Integer status, String[] ids);    /**     * 批量更新房间基数     *     * @param ids     * @param num     * @return Integer     */    public Integer updateBasenum(String[] ids, Integer num);    /**     * 批量更新房间倍数     *     * @param ids     * @param num     * @return Integer     */    public Integer updateMultiplenum(String[] ids, Integer num);    /**     * 查询附合条件的自播间     *     * @param name     * @param page     * @return     */    public List<YwUserRoom> doSearch(String name, PageDto page);    /**     * 附合条件的查询记录数     *     * @param name     * @return     */    public Integer getDoSearchCount(String name);    /**     * 根据热门类型获取热门直播房间     * 按在线，order_id排序     *     * @param type     * @param page     * @return     */    public List<YwUserRoom> getBestUserRooms(Integer type, PageDto page);    /**     * 设置是否是大神房间     *     * @param list     */    public void setDaShenRoom(List<YwUserRoom> list);    /**     * 设置是否是女神房间     *     * @param list     */    public void setNvShenRoom(List<YwUserRoom> list);    public Map<String, Integer> getRoomNumber();    public List<YwUserRoom> getYwUserRoomList(YwUserRoom entity, PageDto page);    /**     * 获取指定游戏的在线直播数     *     * @param gameId     * @return     */    public Integer getRoomCountByGameId(String gameId);    /**     * 获取某一游戏的某一类型的热门推荐     *     * @param type     * @param page     * @param gameId     * @return     */    public List<YwUserRoom> getBestUserRooms(Integer type, PageDto page, String gameId);    /**     * 随机获取一个在hot表中的在线房间     *     * @return     */    public YwUserRoom getRandLiveFHot();    /**     * 返回指定数量随机在hot表中的在线房间id     *     * @param limit     * @param ids     * @return     */    public List<String> getRandLiveFHot(int limit, String[] ids);    /**     * 获取在线的推荐直播列表     *     * @param type 热门类型     * @param page     * @return     */    public List<YwUserRoom> getBestOnlineUserRooms(Integer type, PageDto page);    /**     * @param entity     * @param page     * @return     * @Description: 获取大神女神房间     */    public List<YwUserRoom> getYwUserRoomIsDN(YwUserRoom entity, PageDto page);    /**     * @param type     * @param page     * @return     */    public List<YwUserRoom> geUserRoomsByEntity(Integer type, PageDto page);    /**     * 获取所有在线房间，按推荐排序     *     * @param lanshaHotAnchor     * @param page     * @return     */    public List<YwUserRoom> getAllOnlineLiveSortByHot(Integer lanshaHotAnchor, PageDto page);}