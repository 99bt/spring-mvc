<?xml version="1.0" encoding="UTF-8"?>
<beans default-autowire="byName" 
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd">
        
	<description>Spring公共配置文件</description>
	
    <!-- 自动注入配置 -->  
    <aop:aspectj-autoproxy />
    <!-- 该 BeanPostProcessor 将自动对标注 @Autowired 的 Bean 进行注入 -->     
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" lazy-init="false"/>
    <context:component-scan base-package="com.yaowang" />

	<bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:/conf/database.properties</value>
			</list>
		</property>
	</bean>
    
	<bean id="dataSource" class="com.yaowang.util.YwBasicDataSource" destroy-method="close" >
		<!-- 连接信息 -->
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="url" value="${datasource.url}" />
		<property name="driverClassName" value="${datasource.driverClassName}" />
 		
		<!-- dbcp数据库连接池 -->
		<property name="initialSize" value="${datasource.initialSize}"/>
		<property name="maxActive" value="${datasource.maxActive}"/>
		<property name="minIdle" value="${datasource.minIdle}"/>
		<property name="poolPreparedStatements" value="${datasource.poolPreparedStatements}"/>
		<property name="defaultAutoCommit" value="${datasource.defaultAutoCommit}"/>
		<property name="defaultTransactionIsolation" value="${datasource.defaultTransactionIsolation}"/>
		<property name="testOnBorrow" value="${datasource.testOnBorrow}"/>
		<property name="testOnReturn" value="${datasource.testOnReturn}"/>
		<property name="testWhileIdle" value="${datasource.testWhileIdle}"/>
		<property name="timeBetweenEvictionRunsMillis" value="${datasource.timeBetweenEvictionRunsMillis}"/>
	</bean>

	<bean id="namedParameterJdbcDaoSupport" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcDaoSupport">  
        <property name="dataSource" ref="dataSource" />  
    </bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 配置事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="init*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="edit*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="importData*" propagation="REQUIRED" rollback-for="Exception" />

			<tx:method name="find*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="stat*" read-only="true" />
			<tx:method name="isExists*" read-only="true" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 那些类的哪些方法参与事务 -->
	<aop:config>
		<aop:pointcut id="commMethod" expression="execution(* com.yaowang..service.*Service.*(..))" />
		<aop:advisor pointcut-ref="commMethod" advice-ref="txAdvice" />
	</aop:config>
	
	<!-- 缓存切面 -->
	<aop:config> 
         <!--切入点--> 
         <aop:pointcut id="cachePoint" expression="execution(* com.yaowang..service.*Service.*(..))"/>  
         <!--在该切入点使用自定义拦截器--> 
         <aop:advisor pointcut-ref="cachePoint" advice-ref="cacheAdvice"/>
    </aop:config>
</beans>
